<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="application" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\application.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="OUTPUT_DEVICE_OFFLINE" xml:space="preserve">
    <value>Selected or no device is online</value>
  </data>
  <data name="ADB_NOT_FOUND_MESSAGE" xml:space="preserve">
    <value>Please correct either ANDROID_SDK_HOME or PATH environment variables to include ADB binary.</value>
  </data>
  <data name="ADB_NOT_FOUND_TITLE" xml:space="preserve">
    <value>Binary Not Found</value>
  </data>
  <data name="OUTPUT_CHECKING_VERSION" xml:space="preserve">
    <value>Checking ADB executable version</value>
  </data>
  <data name="OUTPUT_CONNECTION_ATTEMPT" xml:space="preserve">
    <value>Attempting to connect to {0}</value>
  </data>
  <data name="OUTPUT_CONNECTION_FAILED" xml:space="preserve">
    <value>Failed to connect with {0}</value>
  </data>
  <data name="OUTPUT_CONNECTION_INVALID_IP" xml:space="preserve">
    <value>Please enter a valid IP address</value>
  </data>
  <data name="OUTPUT_CONNECTION_SUCCESS" xml:space="preserve">
    <value>Successfully connected with {0}</value>
  </data>
  <data name="OUTPUT_DEVICE_ADDED" xml:space="preserve">
    <value>A new device has been added</value>
  </data>
  <data name="OUTPUT_DEVICE_REMOVED" xml:space="preserve">
    <value>Connected device was removed</value>
  </data>
  <data name="OUTPUT_DEVICE_SELECTED" xml:space="preserve">
    <value>Selected {0} [{1}] - {2}</value>
  </data>
  <data name="OUTPUT_ENTER_LOCAL" xml:space="preserve">
    <value>Please browse to or enter a local path</value>
  </data>
  <data name="OUTPUT_VERSION_FOUND" xml:space="preserve">
    <value>Found ADB version {0}</value>
  </data>
  <data name="OUTPUT_INSTALLING_APPS" xml:space="preserve">
    <value>Installing {0} application(s) to {1} [{2}]</value>
  </data>
  <data name="OUTPUT_INSTALL_FAILED" xml:space="preserve">
    <value>Failed to install {0}</value>
  </data>
  <data name="OUTPUT_INSTALL_SUCCESS" xml:space="preserve">
    <value>Successfully installed {0}</value>
  </data>
  <data name="OUTPUT_NOT_EXISTS" xml:space="preserve">
    <value>{0} does not exists</value>
  </data>
  <data name="OUTPUT_PULLING" xml:space="preserve">
    <value>Pulling {0} to {1} from {2} [{3}]</value>
  </data>
  <data name="OUTPUT_PULLING_FAILED" xml:space="preserve">
    <value>Successfully pulled {0}</value>
  </data>
  <data name="OUTPUT_PULLING_SUCCESS" xml:space="preserve">
    <value>Failed to pull {0}</value>
  </data>
  <data name="OUTPUT_PUSHING" xml:space="preserve">
    <value>Pushing {0} to {1} from {2} [{3}]</value>
  </data>
  <data name="OUTPUT_PUSHING_FAILED" xml:space="preserve">
    <value>Failed to push {0}</value>
  </data>
  <data name="OUTPUT_PUSHING_SUCCESS" xml:space="preserve">
    <value>Successfully pushed {0}</value>
  </data>
  <data name="OUTPUT_REBOOTING" xml:space="preserve">
    <value>Rebooting {0} into {1}</value>
  </data>
  <data name="OUTPUT_REFRESHING" xml:space="preserve">
    <value>Refreshing list of connected device(s)</value>
  </data>
  <data name="OUTPUT_REFRESHING_RESULT" xml:space="preserve">
    <value>Currently {0} android device(s) are connected</value>
  </data>
  <data name="OUTPUT_RESTARTING_ADB" xml:space="preserve">
    <value>Restarting running ADB server instance</value>
  </data>
  <data name="OUTPUT_STARTING_ADB" xml:space="preserve">
    <value>Starting new ADB server instance</value>
  </data>
  <data name="OUTPUT_STOPPING_ADB" xml:space="preserve">
    <value>Stopping ADB server instance</value>
  </data>
  <data name="REBOOT_BOOTLOADER" xml:space="preserve">
    <value>Bootloader</value>
  </data>
  <data name="REBOOT_DOWNLOAD" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="REBOOT_RECOVERY" xml:space="preserve">
    <value>Recovery</value>
  </data>
  <data name="REBOOT_SYSTEM" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="ROOT_STATUS" xml:space="preserve">
    <value>Rooted: {0}</value>
  </data>
  <data name="WORKER_BUSY_MESSAGE" xml:space="preserve">
    <value>There is already a backround task in progress. Cancel &amp; continue?</value>
  </data>
  <data name="WORKER_BUSY_TITLE" xml:space="preserve">
    <value>Cancel Previous Task</value>
  </data>
  <data name="OUTPUT_VERSION_NOT_FOUND" xml:space="preserve">
    <value>Unable to find ADB executable version</value>
  </data>
  <data name="OUTPUT_SCREENSHOT" xml:space="preserve">
    <value>Taking screenshot from phone</value>
  </data>
  <data name="OUTPUT_SCREENSHOT_FAILED" xml:space="preserve">
    <value>Failed to take screenshot from phone</value>
  </data>
  <data name="OUTPUT_SCREENSHOT_SUCCESS" xml:space="preserve">
    <value>Screenshot saved successfully to {0}</value>
  </data>
</root>